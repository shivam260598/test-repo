{"ast":null,"code":"/*\nCSV Parse\n\nPlease look at the [project documentation](https://csv.js.org/parse/) for\nadditional information.\n*/\nimport { Transform } from 'stream';\nimport { is_object } from './utils/is_object.js';\nimport { transform } from './api/index.js';\nimport { CsvError } from './api/CsvError.js';\n\nclass Parser extends Transform {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({ ...{\n        readableObjectMode: true\n      },\n      ...opts,\n      encoding: null\n    });\n    this.api = transform(opts);\n\n    this.api.options.on_skip = (err, chunk) => {\n      this.emit('skip', err, chunk);\n    }; // Backward compatibility\n\n\n    this.state = this.api.state;\n    this.options = this.api.options;\n    this.info = this.api.info;\n  } // Implementation of `Transform._transform`\n\n\n  _transform(buf, encoding, callback) {\n    if (this.state.stop === true) {\n      return;\n    }\n\n    const err = this.api.parse(buf, false, record => {\n      this.push.call(this, record);\n    }, () => {\n      this.push.call(this, null);\n    });\n\n    if (err !== undefined) {\n      this.state.stop = true;\n    }\n\n    callback(err);\n  } // Implementation of `Transform._flush`\n\n\n  _flush(callback) {\n    if (this.state.stop === true) {\n      return;\n    }\n\n    const err = this.api.parse(undefined, true, record => {\n      this.push.call(this, record);\n    }, () => {\n      this.push.call(this, null);\n    });\n    callback(err);\n  }\n\n}\n\nconst parse = function () {\n  let data, options, callback;\n\n  for (const i in arguments) {\n    const argument = arguments[i];\n    const type = typeof argument;\n\n    if (data === undefined && (typeof argument === 'string' || Buffer.isBuffer(argument))) {\n      data = argument;\n    } else if (options === undefined && is_object(argument)) {\n      options = argument;\n    } else if (callback === undefined && type === 'function') {\n      callback = argument;\n    } else {\n      throw new CsvError('CSV_INVALID_ARGUMENT', ['Invalid argument:', `got ${JSON.stringify(argument)} at index ${i}`], options || {});\n    }\n  }\n\n  const parser = new Parser(options);\n\n  if (callback) {\n    const records = options === undefined || options.objname === undefined ? [] : {};\n    parser.on('readable', function () {\n      let record;\n\n      while ((record = this.read()) !== null) {\n        if (options === undefined || options.objname === undefined) {\n          records.push(record);\n        } else {\n          records[record[0]] = record[1];\n        }\n      }\n    });\n    parser.on('error', function (err) {\n      callback(err, undefined, parser.api.__infoDataSet());\n    });\n    parser.on('end', function () {\n      callback(undefined, records, parser.api.__infoDataSet());\n    });\n  }\n\n  if (data !== undefined) {\n    const writer = function () {\n      parser.write(data);\n      parser.end();\n    }; // Support Deno, Rollup doesnt provide a shim for setImmediate\n\n\n    if (typeof setImmediate === 'function') {\n      setImmediate(writer);\n    } else {\n      setTimeout(writer, 0);\n    }\n  }\n\n  return parser;\n}; // export default parse\n\n\nexport { parse, Parser, CsvError };","map":{"version":3,"names":["Transform","is_object","transform","CsvError","Parser","constructor","opts","readableObjectMode","encoding","api","options","on_skip","err","chunk","emit","state","info","_transform","buf","callback","stop","parse","record","push","call","undefined","_flush","data","i","arguments","argument","type","Buffer","isBuffer","JSON","stringify","parser","records","objname","on","read","__infoDataSet","writer","write","end","setImmediate","setTimeout"],"sources":["/Users/shivamsingh/stocks-application/node_modules/csv-parse/lib/index.js"],"sourcesContent":["\n/*\nCSV Parse\n\nPlease look at the [project documentation](https://csv.js.org/parse/) for\nadditional information.\n*/\n\nimport { Transform } from 'stream';\nimport {is_object} from './utils/is_object.js';\nimport {transform} from './api/index.js';\nimport {CsvError} from './api/CsvError.js';\n\nclass Parser extends Transform {\n  constructor(opts = {}){\n    super({...{readableObjectMode: true}, ...opts, encoding: null});\n    this.api = transform(opts);\n    this.api.options.on_skip = (err, chunk) => {\n      this.emit('skip', err, chunk);\n    };\n    // Backward compatibility\n    this.state = this.api.state;\n    this.options = this.api.options;\n    this.info = this.api.info;\n  }\n  // Implementation of `Transform._transform`\n  _transform(buf, encoding, callback){\n    if(this.state.stop === true){\n      return;\n    }\n    const err = this.api.parse(buf, false, (record) => {\n      this.push.call(this, record);\n    }, () => {\n      this.push.call(this, null);\n    });\n    if(err !== undefined){\n      this.state.stop = true;\n    }\n    callback(err);\n  }\n  // Implementation of `Transform._flush`\n  _flush(callback){\n    if(this.state.stop === true){\n      return;\n    }\n    const err = this.api.parse(undefined, true, (record) => {\n      this.push.call(this, record);\n    }, () => {\n      this.push.call(this, null);\n    });\n    callback(err);\n  }\n}\n\nconst parse = function(){\n  let data, options, callback;\n  for(const i in arguments){\n    const argument = arguments[i];\n    const type = typeof argument;\n    if(data === undefined && (typeof argument === 'string' || Buffer.isBuffer(argument))){\n      data = argument;\n    }else if(options === undefined && is_object(argument)){\n      options = argument;\n    }else if(callback === undefined && type === 'function'){\n      callback = argument;\n    }else{\n      throw new CsvError('CSV_INVALID_ARGUMENT', [\n        'Invalid argument:',\n        `got ${JSON.stringify(argument)} at index ${i}`\n      ], options || {});\n    }\n  }\n  const parser = new Parser(options);\n  if(callback){\n    const records = options === undefined || options.objname === undefined ? [] : {};\n    parser.on('readable', function(){\n      let record;\n      while((record = this.read()) !== null){\n        if(options === undefined || options.objname === undefined){\n          records.push(record);\n        }else{\n          records[record[0]] = record[1];\n        }\n      }\n    });\n    parser.on('error', function(err){\n      callback(err, undefined, parser.api.__infoDataSet());\n    });\n    parser.on('end', function(){\n      callback(undefined, records, parser.api.__infoDataSet());\n    });\n  }\n  if(data !== undefined){\n    const writer = function(){\n      parser.write(data);\n      parser.end();\n    };\n    // Support Deno, Rollup doesnt provide a shim for setImmediate\n    if(typeof setImmediate === 'function'){\n      setImmediate(writer);\n    }else{\n      setTimeout(writer, 0);\n    }\n  }\n  return parser;\n};\n\n// export default parse\nexport { parse, Parser, CsvError };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}